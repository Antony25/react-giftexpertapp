{"version":3,"sources":["components/AddCategory.js","helpers/getGifts.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifts.js","GitExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifts","key","GitExpertApp","categories","index","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACVC,mBAAS,IADC,mBACvCC,EADuC,KAC3BC,EAD2B,KAc9C,OACI,oCACI,0BAAMC,SAVO,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IACzBR,GAAe,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACvCN,EAAc,OAOV,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAlBU,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,a,uBCHdG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,iDACkCC,UAAUH,GAD5C,+DAEDI,MAAOF,GAFN,cAEdG,EAFc,gBAGGA,EAAKC,OAHR,uBAGZC,EAHY,EAGZA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GACnB,MAAM,CACFC,GAAGD,EAAIC,GACPC,MAAOF,EAAIE,MACXV,IAAKQ,EAAIG,OAAOC,iBAAiBZ,QATrB,kBAYbM,GAZa,4CAAH,sDCDZO,EAAc,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACpC,OACI,yBAAKc,UAAU,6DACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCAHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECFZ,SAACA,GAAc,IAAD,EACbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAH2B,mBAChCC,EADgC,KACzBC,EADyB,KAavC,OARAC,qBAAW,WACPxB,EAASC,GAAUwB,MAAK,SAAAC,GAAI,OAAIH,EAAU,CACtCf,KAAKkB,EACLL,SAAQ,SAGb,CAACpB,IAEGqB,EDPwBK,CAAc1B,GAAjCa,EAJyB,EAI9BN,KAAaa,EAJiB,EAIjBA,QAGpB,OACI,oCACA,wBAAIJ,UAAU,qCAAsChB,GAClDoB,GAAW,uBAAGJ,UAAU,oCAAb,WACZ,yBAAKA,UAAU,aAENH,EAAOJ,KAAK,SAAAC,GAAG,OACf,kBAAC,EAAD,eACEiB,IAAKjB,EAAIC,IACJD,UElBZkB,EAAe,WAAM,MAEM1C,mBAAS,CAAC,cAFhB,mBAEvB2C,EAFuB,KAEX5C,EAFW,KAO9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BACA,4BAEQ4C,EAAWpB,KAAI,SAACT,EAAU8B,GACtB,OAAO,kBAAC,EAAD,CACHH,IAAS3B,EACTA,SAAWA,U,MChBvC+B,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,U","file":"static/js/main.a19ec682.chunk.js","sourcesContent":["import React, { useState} from 'react'\nimport  PropTypes from 'prop-types'\n\nexport const AddCategory = ({ setCategories }) => {\n    const [inputValue, setInputValue] = useState('')\n    const handleInputChange = (e ) => {\n        setInputValue(e.target.value);\n\n    }\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        if (inputValue.trim().length>2){\n            setCategories( cats => [inputValue, ...cats]);\n            setInputValue('');\n        }\n\n    }\n    return (\n        <>\n            <form onSubmit={ handleSubmit }>\n                <input  \n                    type=\"text\"\n                    value={ inputValue }\n                    onChange= { handleInputChange }\n                    />\n            </form>\n            \n        </>\n    )\n}\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}","\n\n\n    export const getGifts = async( category) => {\n        const url= `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=zIvYglT9UhYZBbNaC9CWoGh5LuyKqG7t`\n        const resp = await fetch( url );\n        const { data } = await resp.json();\n        \n        const gifs = data.map( img => {\n            return{ \n                id:img.id,\n                title: img.title,\n                url: img.images.downsized_medium.url\n            }\n        })\n        return gifs;\n    }","import React from 'react'\n\nexport const GifGridItem = ({id, title, url}) => {\n    return (\n        <div className=\"card animate__animated animate__fadeIn animate__delay-10s\">\n            <img src={url} alt={title} />\n            <p>{title}</p>  \n        </div>\n    )\n}\n","import React from 'react'\nimport { useFetchGifts } from '../hooks/useFetchGifts'\nimport { GifGridItem } from './GifGridItem';\n//import { getGifts }  from '../helpers/getGifts'\n\n\nexport const GifGrid = ({ category }) => {\n\n    //const [images, setImages] = useState([])\n\n    const {data:images, loading} = useFetchGifts(category);\n\n\n    return (\n        <>\n        <h3 className=\"animate__animated animate__fadeIn\">{ category }</h3>\n        { loading && <p className=\"animate__animated animate__flash\">Loading</p>}\n         <div className=\"card-grid\">\n              {\n                  images.map( img => (\n                  <GifGridItem \n                    key={img.id} \n                    { ...img } />\n                  ))\n              }\n\n        </div>\n        </>\n    )\n}\n","import { useEffect, useState } from \"react\"\nimport { getGifts } from  '../helpers/getGifts'\n\n\nexport const useFetchGifts = (category) => {\n    const [state, setstate] = useState({\n        data:[], \n        loading:true\n    });\n    useEffect( () => {\n        getGifts(category).then(imgs => setstate( {\n            data:imgs, \n            loading:false\n        })\n        )\n    }, [category])\n\n    return state;\n}\n","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory'\nimport { GifGrid } from './components/GifGrid'\n\nexport const GitExpertApp = () => {\n    //const categories =['One Punch', 'Samurai X','Dragon Ball']\n    const [categories, setCategories] = useState(['One Punch'])\n\n    //const handledAdd = () => { \n    //    setCategories([...categories, 'Sword Art Online'])\n    //}\n    return (\n        <>\n            <h2>GitExpertApp</h2>\n            <AddCategory setCategories={setCategories}></AddCategory>\n            <hr></hr>\n            <ol>\n                {\n                    categories.map((category, index) =>{\n                        return <GifGrid \n                            key =   {category}\n                            category= {category}\n                            />\n                    })\n                }\n            </ol>\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GitExpertApp } from './GitExpertApp';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <GitExpertApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}